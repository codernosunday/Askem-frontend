{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { useState } from 'react';\n// import dynamic from 'next/dynamic'\nimport cn from 'classnames';\nimport styles from './textarea.module.css';\n// const RichTextEditor = dynamic(() => import('../text-area-update'), {\n//   ssr: false, // Táº¯t SSR\n// })\nconst TextArea = _ref => {\n  let {\n      label,\n      inputInfo,\n      hasError,\n      errorMessage,\n      className\n      // value,\n      // setValue,\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"label\", \"inputInfo\", \"hasError\", \"errorMessage\", \"className\"]);\n  const {\n    0: editorContent,\n    1: setEditorContent\n  } = useState('');\n  return __jsx(\"div\", {\n    className: styles.container\n  }, label && __jsx(\"label\", {\n    className: styles.label\n  }, label), inputInfo && __jsx(\"p\", {\n    className: styles.inputInfo\n  }, inputInfo), __jsx(\"textarea\", _extends({\n    className: cn(styles.textarea, className, hasError && styles.hasError)\n  }, props)), hasError && __jsx(\"p\", {\n    className: styles.errorMessage\n  }, errorMessage));\n};\nexport default TextArea;","map":null,"metadata":{},"sourceType":"module"}