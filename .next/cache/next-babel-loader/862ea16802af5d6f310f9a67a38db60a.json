{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\"];\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport useComponentVisible from '../../../hooks/useComponentVisible';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport CONST from '../../../constants';\nimport ModalContext from '../../../store/modal';\nimport { AuthContext } from '../../../store/auth';\nimport Button from '../../button';\nimport NavigationDropdown from '../../navigation-dropdown';\nimport { Menu, Close, Logo } from '../../icons';\nimport styles from './header.module.css';\nvar Header = function Header(_ref) {\n  var className = _ref.className,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useContext = useContext(ModalContext),\n    handleComponentVisible = _useContext.handleComponentVisible;\n  var _useContext2 = useContext(AuthContext),\n    isAuthenticated = _useContext2.isAuthenticated,\n    authState = _useContext2.authState,\n    logout = _useContext2.logout;\n  var _useComponentVisible = useComponentVisible(false),\n    ref = _useComponentVisible.ref,\n    toggleRef = _useComponentVisible.toggleRef,\n    isComponentVisible = _useComponentVisible.isComponentVisible,\n    setIsComponentVisible = _useComponentVisible.setIsComponentVisible;\n  var size = useWindowSize();\n  useEffect(function () {\n    if (size.width > CONST.MOBILE_SIZE) {\n      setIsComponentVisible(false);\n    }\n  }, [size]);\n  return __jsx(\"header\", _extends({\n    className: cn(styles.header, className)\n  }, props), __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(\"div\", {\n    ref: toggleRef,\n    className: styles.menuContainer\n  }, __jsx(Button, {\n    className: styles.menu,\n    onClick: function onClick() {\n      return setIsComponentVisible(function (isOpen) {\n        return !isOpen;\n      });\n    }\n  }, isComponentVisible ? __jsx(Close, null) : __jsx(Menu, null))), __jsx(Button, {\n    className: styles.logo,\n    href: \"/\"\n  }, __jsx(Logo, null), __jsx(\"p\", null, __jsx(\"span\", null, \"Askem\"))), __jsx(\"div\", {\n    style: {\n      flex: 1\n    }\n  }), isAuthenticated() ? __jsx(\"div\", {\n    className: styles.userInfo\n  }, __jsx(\"p\", null, \"Welcome\", ' ', __jsx(Link, {\n    href: \"/users/[user]\",\n    as: \"/users/\".concat(authState.userInfo.username)\n  }, __jsx(\"a\", null, authState.userInfo.username, \"!\"))), __jsx(Button, {\n    className: styles.btnlogout // Đảm bảo className được cập nhật\n    ,\n    primary: true,\n    onClick: function onClick() {\n      return logout();\n    }\n  }, __jsx(\"span\", null, \"Log Out\"), \" \")) : __jsx(React.Fragment, null, __jsx(Button, {\n    className: styles.btnlogout,\n    secondary: true,\n    onClick: function onClick() {\n      return handleComponentVisible(true, 'login');\n    }\n  }, \"Log in\"), __jsx(Button, {\n    className: styles.btnlogout,\n    primary: true,\n    onClick: function onClick() {\n      return handleComponentVisible(true, 'signup');\n    }\n  }, \"Sign up\"))), __jsx(\"div\", {\n    ref: ref\n  }, isComponentVisible && __jsx(NavigationDropdown, null)));\n};\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}