{"ast":null,"code":"var _jsxFileName = \"W:\\\\askem-project2\\\\client\\\\pages\\\\groups\\\\[group].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { GroupAuthContext } from '../../store/groupauth';\nimport { publicFetch } from '../../util/fetcher';\nimport PageTitle from '../../components/page-title';\nimport Layout from '../../components/layout';\nimport { FetchContext } from '../../store/fetch';\nimport QuestionWrapper from '../../components/question/question-wrapper';\nimport QuestionStats from '../../components/question/question-stats';\nimport QuestionSummary from '../../components/question/question-summary';\nimport ButtonGroup from '../../components/button-group';\nimport { Spinner } from '../../components/icons';\nexport async function getServerSideProps(context) {\n  const {\n    group\n  } = context.params;\n  return {\n    props: {\n      name: group\n    }\n  };\n}\nconst GroupDetail = ({\n  name\n}) => {\n  const router = useRouter();\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState(null);\n  const {\n    0: sortType,\n    1: setSortType\n  } = useState('Votes');\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const {\n    valueGroup,\n    setValueGroup\n  } = useContext(GroupAuthContext);\n  useEffect(() => {\n    try {\n      const {\n        data\n      } = authAxios.post('');\n    } catch (error) {}\n    const fetchDataGroup = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/group/${name}`);\n      setValueGroup(name);\n    };\n    fetchDataGroup();\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get('/question');\n      setQuestions(data);\n    };\n    const fetchQuestionByTag = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/questions/${router.query.tag}`);\n      setQuestions(data);\n    };\n    if (router.query.tag) {\n      fetchQuestionByTag();\n    } else {\n      fetchQuestion();\n    }\n  }, [router.query.tag]);\n  const handleSorting = () => {\n    switch (sortType) {\n      case 'Votes':\n        return (a, b) => b.score - a.score;\n      case 'Views':\n        return (a, b) => b.views - a.views;\n      case 'Newest':\n        return (a, b) => new Date(b.created) - new Date(a.created);\n      case 'Oldest':\n        return (a, b) => new Date(a.created) - new Date(b.created);\n      default:\n        break;\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Group \", valueGroup)), __jsx(Layout, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(PageTitle, {\n    title: name,\n    linkRoute: '/groups/ask',\n    borderBottom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), __jsx(ButtonGroup, {\n    borderBottom: true,\n    buttons: ['Votes', 'Views', 'Newest', 'Oldest'],\n    selected: sortType,\n    setSelected: setSortType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), !questions && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), questions === null || questions === void 0 ? void 0 : questions.sort(handleSorting()).map(({\n    id,\n    votes,\n    answers,\n    views,\n    title,\n    text,\n    tags,\n    author,\n    created\n  }) => __jsx(QuestionWrapper, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, __jsx(QuestionStats, {\n    voteCount: votes.length,\n    answerCount: answers.length,\n    view: views,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }), __jsx(QuestionSummary, {\n    id: id,\n    title: title,\n    tags: tags,\n    author: author,\n    createdTime: created,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: text\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }))))));\n};\nexport default GroupDetail;","map":{"version":3,"names":["React","useEffect","useState","useContext","useRouter","Head","GroupAuthContext","publicFetch","PageTitle","Layout","FetchContext","QuestionWrapper","QuestionStats","QuestionSummary","ButtonGroup","Spinner","getServerSideProps","context","group","params","props","name","GroupDetail","router","questions","setQuestions","sortType","setSortType","authAxios","valueGroup","setValueGroup","data","post","error","fetchDataGroup","get","fetchQuestion","fetchQuestionByTag","query","tag","handleSorting","a","b","score","views","Date","created","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","extra","title","linkRoute","borderBottom","buttons","selected","setSelected","className","sort","map","id","votes","answers","text","tags","author","key","voteCount","length","answerCount","view","createdTime","dangerouslySetInnerHTML","__html"],"sources":["W:/askem-project2/client/pages/groups/[group].js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\nimport { GroupAuthContext } from '../../store/groupauth'\r\nimport { publicFetch } from '../../util/fetcher'\r\nimport PageTitle from '../../components/page-title'\r\nimport Layout from '../../components/layout'\r\nimport { FetchContext } from '../../store/fetch'\r\n\r\nimport QuestionWrapper from '../../components/question/question-wrapper'\r\nimport QuestionStats from '../../components/question/question-stats'\r\nimport QuestionSummary from '../../components/question/question-summary'\r\nimport ButtonGroup from '../../components/button-group'\r\nimport { Spinner } from '../../components/icons'\r\nexport async function getServerSideProps(context) {\r\n    const { group } = context.params;\r\n\r\n    return {\r\n        props: { name: group },\r\n    };\r\n}\r\nconst GroupDetail = ({ name }) => {\r\n    const router = useRouter()\r\n    const [questions, setQuestions] = useState(null)\r\n    const [sortType, setSortType] = useState('Votes')\r\n    const { authAxios } = useContext(FetchContext)\r\n    const { valueGroup, setValueGroup } = useContext(GroupAuthContext)\r\n    useEffect(() => {\r\n        try {\r\n            const { data } = authAxios.post('')\r\n        }\r\n        catch (error) { }\r\n        const fetchDataGroup = async () => {\r\n            const { data } = await publicFetch.get(`/group/${name}`)\r\n            setValueGroup(name);\r\n        }\r\n        fetchDataGroup()\r\n\r\n        const fetchQuestion = async () => {\r\n            const { data } = await publicFetch.get('/question')\r\n            setQuestions(data)\r\n        }\r\n\r\n        const fetchQuestionByTag = async () => {\r\n            const { data } = await publicFetch.get(`/questions/${router.query.tag}`)\r\n            setQuestions(data)\r\n        }\r\n\r\n        if (router.query.tag) {\r\n            fetchQuestionByTag()\r\n        } else {\r\n            fetchQuestion()\r\n        }\r\n    }, [router.query.tag])\r\n    const handleSorting = () => {\r\n        switch (sortType) {\r\n            case 'Votes':\r\n                return (a, b) => b.score - a.score\r\n            case 'Views':\r\n                return (a, b) => b.views - a.views\r\n            case 'Newest':\r\n                return (a, b) => new Date(b.created) - new Date(a.created)\r\n            case 'Oldest':\r\n                return (a, b) => new Date(a.created) - new Date(b.created)\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Group {valueGroup}</title>\r\n            </Head>\r\n            <Layout extra={true}>\r\n                <PageTitle title={name} linkRoute={'/groups/ask'} borderBottom={false} />\r\n                <ButtonGroup\r\n                    borderBottom\r\n                    buttons={['Votes', 'Views', 'Newest', 'Oldest']}\r\n                    selected={sortType}\r\n                    setSelected={setSortType}\r\n                />\r\n                {!questions && (\r\n                    <div className=\"loading\">\r\n                        <Spinner />\r\n                    </div>\r\n                )}\r\n\r\n                {questions\r\n                    ?.sort(handleSorting())\r\n                    .map(\r\n                        ({\r\n                            id,\r\n                            votes,\r\n                            answers,\r\n                            views,\r\n                            title,\r\n                            text,\r\n                            tags,\r\n                            author,\r\n                            created\r\n                        }) => (\r\n                            <QuestionWrapper key={id}>\r\n                                <QuestionStats\r\n                                    voteCount={votes.length}\r\n                                    answerCount={answers.length}\r\n                                    view={views}\r\n                                />\r\n                                <QuestionSummary\r\n                                    id={id}\r\n                                    title={title}\r\n                                    tags={tags}\r\n                                    author={author}\r\n                                    createdTime={created}\r\n                                >\r\n                                    <div dangerouslySetInnerHTML={{ __html: text }} />\r\n                                </QuestionSummary>\r\n                            </QuestionWrapper>\r\n                        )\r\n                    )}\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default GroupDetail"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}