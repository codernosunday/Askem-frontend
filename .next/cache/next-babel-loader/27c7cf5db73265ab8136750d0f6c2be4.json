{"ast":null,"code":"var _jsxFileName = \"W:\\\\askem-project2\\\\client\\\\components\\\\input-image\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport styles from './inputimage.module.css';\nconst ImageUpload = () => {\n  const {\n    0: imageBase64,\n    1: setImageBase64\n  } = useState(null);\n  const {\n    0: imagePreview,\n    1: setImagePreview\n  } = useState(null);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        const base64String = e.target.result;\n        setImageBase64(base64String);\n        setImagePreview(base64String);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"imageInput\",\n    className: styles.uploadBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: styles.uploadLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Click to upload an image\")), __jsx(\"input\", {\n    type: \"file\",\n    id: \"imageInput\",\n    accept: \"image/*\",\n    onChange: handleImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), imagePreview && __jsx(\"img\", {\n    src: imagePreview,\n    alt: \"Image Preview\",\n    className: styles.previewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), imageBase64 && __jsx(\"textarea\", {\n    readOnly: true,\n    value: imageBase64,\n    className: styles.textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }));\n};\nexport default ImageUpload;","map":{"version":3,"names":["useState","styles","ImageUpload","imageBase64","setImageBase64","imagePreview","setImagePreview","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","base64String","result","readAsDataURL","__jsx","className","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","uploadBox","uploadLabel","type","id","accept","onChange","src","alt","previewImage","readOnly","value","textarea"],"sources":["W:/askem-project2/client/components/input-image/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport styles from './inputimage.module.css';\r\n\r\nconst ImageUpload = () => {\r\n    const [imageBase64, setImageBase64] = useState(null);\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                const base64String = e.target.result;\r\n                setImageBase64(base64String);\r\n                setImagePreview(base64String);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <label htmlFor=\"imageInput\" className={styles.uploadBox}>\r\n                <span className={styles.uploadLabel}>Click to upload an image</span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n            />\r\n            {imagePreview && (\r\n                <img src={imagePreview} alt=\"Image Preview\" className={styles.previewImage} />\r\n            )}\r\n            {imageBase64 && (\r\n                <textarea readOnly value={imageBase64} className={styles.textarea} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAA,GAACC,WAAW;IAAA,GAAEC;EAAc,IAAIJ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAA,GAACK,YAAY;IAAA,GAAEC;EAAe,IAAIN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACN,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,CAAC,EAAE;QACzB,MAAMC,YAAY,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;QACpCb,cAAc,CAACY,YAAY,CAAC;QAC5BV,eAAe,CAACU,YAAY,CAAC;MACjC,CAAC;MACDJ,MAAM,CAACM,aAAa,CAACT,IAAI,CAAC;IAC9B;EACJ,CAAC;EAED,OACIU,KAAA;IAAKC,SAAS,EAAEnB,MAAM,CAACoB,SAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BR,KAAA;IAAOS,OAAO,EAAC,YAAY;IAACR,SAAS,EAAEnB,MAAM,CAAC4B,SAAU;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpDR,KAAA;IAAMC,SAAS,EAAEnB,MAAM,CAAC6B,WAAY;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAA8B,CAChE,CAAC,EACRR,KAAA;IACIY,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,YAAY;IACfC,MAAM,EAAC,SAAS;IAChBC,QAAQ,EAAE3B,iBAAkB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/B,CAAC,EACDtB,YAAY,IACTc,KAAA;IAAKgB,GAAG,EAAE9B,YAAa;IAAC+B,GAAG,EAAC,eAAe;IAAChB,SAAS,EAAEnB,MAAM,CAACoC,YAAa;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChF,EACAxB,WAAW,IACRgB,KAAA;IAAUmB,QAAQ;IAACC,KAAK,EAAEpC,WAAY;IAACiB,SAAS,EAAEnB,MAAM,CAACuC,QAAS;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAEvE,CAAC;AAEd,CAAC;AAED,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}