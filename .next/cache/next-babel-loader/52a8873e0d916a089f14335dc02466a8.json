{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React, { useEffect, useContext } from 'react';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport useComponentVisible from '../../../hooks/useComponentVisible';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport CONST from '../../../constants';\nimport ModalContext from '../../../store/modal';\nimport { AuthContext } from '../../../store/auth';\nimport Button from '../../button';\nimport NavigationDropdown from '../../navigation-dropdown';\nimport { Menu, Close, Logo } from '../../icons';\nimport styles from './header.module.css';\nconst Header = _ref => {\n  let {\n      className\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"className\"]);\n  const {\n    handleComponentVisible\n  } = useContext(ModalContext);\n  const {\n    isAuthenticated,\n    authState,\n    logout\n  } = useContext(AuthContext);\n  const {\n    ref,\n    toggleRef,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n  const size = useWindowSize();\n  useEffect(() => {\n    if (size.width > CONST.MOBILE_SIZE) {\n      setIsComponentVisible(false);\n    }\n  }, [size]);\n  return __jsx(\"header\", _extends({\n    className: cn(styles.header, className)\n  }, props), __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(\"div\", {\n    ref: toggleRef,\n    className: styles.menuContainer\n  }, __jsx(Button, {\n    className: styles.menu,\n    onClick: () => setIsComponentVisible(isOpen => !isOpen)\n  }, isComponentVisible ? __jsx(Close, null) : __jsx(Menu, null))), __jsx(Button, {\n    className: styles.logo,\n    href: \"/\"\n  }, __jsx(Logo, null), __jsx(\"p\", null, __jsx(\"span\", null, \"Askem\"))), __jsx(\"div\", {\n    style: {\n      flex: 1\n    }\n  }), isAuthenticated() ? __jsx(\"div\", {\n    className: styles.userInfo\n  }, __jsx(\"p\", null, \"Welcome\", ' ', __jsx(Link, {\n    href: \"/users/[user]\",\n    as: `/users/${authState.userInfo.username}`\n  }, __jsx(\"a\", null, authState.userInfo.username, \"!\"))), __jsx(Button, {\n    className: styles.btnlogout // Đảm bảo className được cập nhật\n    ,\n    primary: true,\n    onClick: () => logout()\n  }, __jsx(\"span\", null, \"Log Out\"), \" \")) : __jsx(React.Fragment, null, __jsx(Button, {\n    className: styles.btnlogout,\n    secondary: true,\n    onClick: () => handleComponentVisible(true, 'login')\n  }, \"Log in\"), __jsx(Button, {\n    className: styles.btnlogout,\n    primary: true,\n    onClick: () => handleComponentVisible(true, 'signup')\n  }, \"Sign up\"))), __jsx(\"div\", {\n    ref: ref\n  }, isComponentVisible && __jsx(NavigationDropdown, null)));\n};\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}