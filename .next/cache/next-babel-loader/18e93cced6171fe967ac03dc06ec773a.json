{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport React from 'react';\nimport cn from 'classnames';\nimport TagsInput from 'react-tagsinput';\nimport { Alert } from '../icons';\nimport styles from './tag-input.module.css';\nconst FormInput = _ref => {\n  let {\n      label,\n      inputInfo,\n      hasError = false,\n      errorMessage\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"label\", \"inputInfo\", \"hasError\", \"errorMessage\"]);\n  return __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(\"label\", {\n    className: styles.label\n  }, label), inputInfo && __jsx(\"p\", {\n    className: styles.inputInfo\n  }, inputInfo), __jsx(\"div\", {\n    className: styles.inputContainer\n  }, __jsx(TagsInput, _extends({\n    onlyUnique: true,\n    className: cn('react-tagsinput', hasError && styles.error),\n    focusedClassName: styles.inputFocused\n  }, props)), hasError && __jsx(Alert, {\n    className: styles.alert\n  })), hasError && __jsx(\"p\", {\n    className: styles.errorMessage\n  }, errorMessage));\n};\nexport default FormInput;","map":null,"metadata":{},"sourceType":"module"}