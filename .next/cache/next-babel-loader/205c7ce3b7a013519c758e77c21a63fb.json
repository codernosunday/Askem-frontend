{"ast":null,"code":"var _jsxFileName = \"W:\\\\askem-project2\\\\client\\\\store\\\\groupauth.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nconst GroupAuthContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = GroupAuthContext;\nconst GroupAuthProvider = ({\n  children\n}) => {\n  const {\n    0: valueGroup,\n    1: setValueGroup\n  } = useState('defaultValue');\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  useEffect(() => {\n    setIsMounted(true); // Đảm bảo component đã được mount hoàn toàn trước khi truy cập vào localStorage\n  }, []);\n  useEffect(() => {\n    if (isMounted) {\n      const storedValue = localStorage.getItem('GroupName');\n      setValueGroup(storedValue ? JSON.parse(storedValue) : 'defaultValue');\n    }\n  }, [isMounted]);\n  useEffect(() => {\n    if (isMounted) {\n      localStorage.setItem('GroupName', JSON.stringify(valueGroup));\n    }\n  }, [valueGroup, isMounted]);\n  return __jsx(Provider, {\n    value: {\n      valueGroup,\n      setValueGroup\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport { GroupAuthContext, GroupAuthProvider };","map":{"version":3,"names":["React","createContext","useState","useEffect","GroupAuthContext","Provider","GroupAuthProvider","children","valueGroup","setValueGroup","isMounted","setIsMounted","storedValue","localStorage","getItem","JSON","parse","setItem","stringify","__jsx","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["W:/askem-project2/client/store/groupauth.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst GroupAuthContext = createContext();\r\nconst { Provider } = GroupAuthContext;\r\n\r\nconst GroupAuthProvider = ({ children }) => {\r\n    const [valueGroup, setValueGroup] = useState('defaultValue');\r\n    const [isMounted, setIsMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsMounted(true); // Đảm bảo component đã được mount hoàn toàn trước khi truy cập vào localStorage\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isMounted) {\r\n            const storedValue = localStorage.getItem('GroupName');\r\n            setValueGroup(storedValue ? JSON.parse(storedValue) : 'defaultValue');\r\n        }\r\n    }, [isMounted]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted) {\r\n            localStorage.setItem('GroupName', JSON.stringify(valueGroup));\r\n        }\r\n    }, [valueGroup, isMounted]);\r\n\r\n    return (\r\n        <Provider value={{ valueGroup, setValueGroup }}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport { GroupAuthContext, GroupAuthProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAEjE,MAAMC,gBAAgB,gBAAGH,aAAa,CAAC,CAAC;AACxC,MAAM;EAAEI;AAAS,CAAC,GAAGD,gBAAgB;AAErC,MAAME,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxC,MAAM;IAAA,GAACC,UAAU;IAAA,GAAEC;EAAa,IAAIP,QAAQ,CAAC,cAAc,CAAC;EAC5D,MAAM;IAAA,GAACQ,SAAS;IAAA,GAAEC;EAAY,IAAIT,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZQ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,EAAE;MACX,MAAME,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACrDL,aAAa,CAACG,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,cAAc,CAAC;IACzE;EACJ,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEfP,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAS,EAAE;MACXG,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACV,UAAU,CAAC,CAAC;IACjE;EACJ,CAAC,EAAE,CAACA,UAAU,EAAEE,SAAS,CAAC,CAAC;EAE3B,OACIS,KAAA,CAACd,QAAQ;IAACe,KAAK,EAAE;MAAEZ,UAAU;MAAEC;IAAc,CAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1CnB,QACK,CAAC;AAEnB,CAAC;AAED,SAASH,gBAAgB,EAAEE,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}